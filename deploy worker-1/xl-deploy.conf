xl {

  # config settings inside server {...} may differ across masters and workers
  server {
    # The public hostname of this system.
    # Must be resolvable for all satellites and workers.
    # If empty, the name of the system will be resolved and the returned address will be used.
    # For the worker setup this will be the hostname of a worker.
    # If master and worker are using the same folder, `xl-worker.conf` should be used to configure worker-specific
    # properties (e.g. hostname, port, ssl settings).
    #
    // hostname = ""
    # The host name to listen on.
    # The default setting will listen on all network interfaces.
    # A specific interface can be targeted by name or address.
    #
    // bind-hostname = "0.0.0.0"

    # Use this property to specify worker port
    // port = 8180

    ssl {
      // enabled = no
      # For the ssl-enabled setup for workers and satellites, use these settings to set up keystore settings
      // key-store = "keystore"
      // key-password = "changeme"
      // key-store-password = "changeme"

      // trust-store = "truststore"
      // trust-store-password = "changeme"

      # Protocol to use for SSL encryption, choose from:
      # Java 7:
      #   'TLSv1.1', 'TLSv1.2'
      // protocol = "TLSv1.2"

      # Example: ["TLS_RSA_WITH_AES_128_CBC_SHA", "TLS_RSA_WITH_AES_256_CBC_SHA"]
      # You need to install the JCE Unlimited Strength Jurisdiction Policy
      # Files to use AES 256.
      # More info here:
      # http://docs.oracle.com/javase/7/docs/technotes/guides/security/SunProviders.html#SunJCEP
      // enabled-algorithms = ["TLS_RSA_WITH_AES_128_CBC_SHA"]

      # (Docs taken from https://doc.akka.io/docs/akka/2.5.16/general/configuration.html)
      # There are two options, and the default SecureRandom is recommended:
      # "" or "SecureRandom" => (default)
      # "SHA1PRNG" => Can be slow because of blocking issues on Linux
      #
      # "AES128CounterSecureRNG" and "AES256CounterSecureRNG" were deprecated in Akka
      # 2.5.16 and if these configuration values are used it will use the default
      # SecureRandom anyway and log a warning. The deprecated implementations are
      # not recommended, but they can be enabled by using configuration values
      # "DeprecatedAES128CounterSecureRNG" or "DeprecatedAES256CounterSecureRNG"
      #
      # Setting a value here may require you to supply the appropriate cipher
      # suite (see enabled-algorithms section above)
      // random-number-generator = ""
    }

    session {
      # Interval which determines how often should XLD purge invalidated sessions from the database
      # Default value is every 20 minutes ("0 0/20 * * * *")
      # Recommended interval value should be aligned with client.session.timeout.minutes (every 20 minutes)
      // cleanup-cron = "0 0/20 * * * *"
    }

    # Timeout for gathering replies from workers
    // aggregation-timeout = 5 seconds
  }

  # config settings inside worker {...} may differ across masters and workers
  worker {
    # Worker name, that will be displayed in interface, defaults to Akka remoting host and port
    // name = "127.0.0.1:8181"
    # how long to wait between connection attempts
    // connect.interval = 10 seconds
    # how long to wait with the first reconnect attempt after master has disconnected
    // reconnect.delay = 30 seconds
    # how long to wait between subsequent reconnection attempts
    // reconnect.interval = 10 seconds
  }

  conf-file {
    # Location of the configuration file.
    // location = "conf/deployit.conf"
  }

  repository {
    # Base location for the repository.
    # The internal database and the file artifacts will be in subfolders of this location (if not otherwise configured).
    // root = "repository"
    artifacts {
      # Type of artifact storage to use. Valid values are:
      # - "file": use the specified file system location for storing artifacts.
      # - "db": use the database for storing artifacts.
         type = "db"

      # Location for artifact storage on file system.
      # Only active when type = "file".
      // root = ${xl.repository.root}"/artifacts"

      # Should artifacts -found in other (not configured) storage options- be moved to the configured storage?
      # If the system detects artifact data in the database, but the storage type is configured as "file" or vice versa, this
      # setting is required to be true and the system will move the artifacts from the database/file storage to the
      # file/database storage.
      // allow-move = false
    }

    # Database connection configuration for repository data
    database {
      # Driver class name. Database specific.
         db-driver-classname = "org.postgresql.Driver"

      # Connection url. Database specific format.
         db-url = "jdbc:postgresql://172.16.28.68:5432/xldeploy"

      # Username for database connection.
         db-username = "xldeploy"

      # Password for database connection.
         db-password = "xldeploy"

      # Maximum size of application level connection pool.
         max-pool-size = 10
    }
  }

  # Database connection configuration for reporting data
  reporting {
    # Database connection configuration for task archive data.
    # defaults to the same values as specified under "xl.repository.database"
    database {
      // db-driver-classname = ${xl.repository.database.db-driver-classname}
      // db-url = ${xl.repository.database.db-url}
      // db-username = ${xl.repository.database.db-username}
      // db-password = ${xl.repository.database.db-password}
      // max-pool-size = ${xl.repository.database.max-pool-size}
    }
  }

  # Password validation criteria configuration
  secret-complexity {
    # Regex for validation and their associated descriptions
    // regex-validations = [
      // ".{8,}$", "Must have at least 8 characters",
      // "(?=.*\\d)", "Must contain at least 1 digit",
      // "(?=.*[A-Z])", "Must contain at least 1 uppercase letter",
      // "(?=.*[a-z])", "Must contain at least 1 lowercase letter",
    // ]
  }

  rest {
    api {
      # Maximum page size for search result lists.
      // maxPageSize = 1000
    }
  }

  deploy {
    websockets {
      message-broker {
        // input-buffer-size = 32768 # in Kb
      }
      threadpool {
        // core-pool-size = 10
        // daemon = false
        // keep-alive-seconds = 60
        // max-pool-size = 24
        // queue-capacity = 500
      }
    }
    license {
      # License expiry warning
      // daysBeforeWarning = 5
    }
  }

  # config settings inside jmx {...} may differ across masters and workers
  jmx {
    // enabled = no # when 'yes' then also hostname is required:
    // hostname = changeme
    // port = 1099

    ssl {
      // enabled = no
      // key-store = ${xl.server.ssl.key-store}
      // key-password = ${xl.server.ssl.key-password}
      // key-store-password = ${xl.server.ssl.key-store-password}
      // trust-store = ${xl.server.ssl.trust-store}
      // trust-store-password = ${xl.server.ssl.trust-store-password}
      // protocol = ${xl.server.ssl.protocol}
      // enabled-algorithms = ${xl.server.ssl.enabled-algorithms}
      // random-number-generator = ${xl.server.ssl.random-number-generator}
    }

    kamon {
      // show-aspectj-missing-warning = "yes"

      metric {
        // track-unmatched-entities = yes
        filters {
          akka-dispatcher {
            // includes = ["PlannerActorSystem/**", "task-sys/**", "xl-scheduler-system/**"]
            // excludes = []
          }
        }
      }

      kamon-mxbeans {
        // mbeans = [],
        // identify-delay-interval-ms = 1000,
        // identify-interval-ms = 1000,
        // value-check-interval-ms = 1000
      }
    }
  }

  task {
    # If this option is set to 'no', additional task execution workers should be started in separate processes to execute tasks.
       in-process-worker = no
    # Location of tasks to be recovered (relative to installation folder)
    # this setting may differ across masters and workers
    // recovery-dir = work
    # Time to wait for the task engine to shut down
    // shutdown-timeout = 1 minute
    # Maximum number of simultaneous running tasks allowed in the system
    // max-active-tasks = 100

    step {
      //  retry-delay = 5 seconds
      //  execution-threads = 32
      //  run-timeout = 6 hours
    }

    artifact-copy-strategy {
      // autodetect = false
    }

    system {
      akka {
        # this setting may differ across masters and workers
        // loggers = ${akka.loggers}
        # this setting may differ across masters and workers
        // loglevel = ${akka.loglevel}
        // extensions = ["com.xebialabs.deployit.engine.tasker.TaskRegistryExtension$"]

        // jvm-exit-on-fatal-error = false

        actor {
          debug {
            // receive = on
            // autoreceive = on
            // lifecycle = on
          }
        }
      }
    }

    dispatchers {
      # Akka dispatcher for state management actions
      state-management-dispatcher {
        // type = Dispatcher
        // executor = "fork-join-executor"
        fork-join-executor {
          // parallelism-min = 8
          // parallelism-factor = 2.0
          // parallelism-max = 32
        }
        # Throughput defines the maximum number of messages to be
        # processed per actor before the thread jumps to the next actor.
        # Set to 1 for as fair as possible.
        // throughput = 100
      }

      # Akka dispatcher to execute steps
      step-dispatcher {
        // type = Dispatcher
        // executor = "thread-pool-executor"
        // throughput = 100

        # Configuration for the thread pool
        thread-pool-executor {
          # minimum number of threads to cap factor-based core number to
          // core-pool-size-min = 32
          # No of core threads ... ceil(available processors * factor)
          // core-pool-size-factor = 3.0
          # Maximum number of threads to cap factor-based number to
          // core-pool-size-max = 32
          # Minimum number of threads to cap factor-based maximumPoolSize number to
          // max-pool-size-min = 32
          # The max-pool-size-factor is used to determine maximumPoolSize of the
          # ThreadPoolExecutor using the following formula:
          # ceil(available processors * factor)
          # The maximumPoolSize will not be less than corePoolSize.
          # It is only used if using a bounded task queue.
          // max-pool-size-factor = 3.0
          # Max number of threads to cap factor-based maximumPoolSize number to
          // max-pool-size-max = 32
          # Specifies the bounded capacity of the task queue (< 1 == unbounded)
          # Keep the queue unbound to avoid that we have to deal with rejections
          // task-queue-size = -1
        }
      }

      # Akka dispatcher to execute step and task state listeners
      state-event-listener-dispatcher {
        // type = Dispatcher
        // executor = "fork-join-executor"
        fork-join-executor {
          // parallelism-min = 2
          // parallelism-factor = 2.0
          // parallelism-max = 16
        }
        // throughput = 100
      }

      # Akka dispatcher to archive steps
      archive-dispatcher {
        // type = Dispatcher
        // executor = "fork-join-executor"
        // throughput = 100
        fork-join-executor {
          // parallelism-min = 2
          // parallelism-factor = 2.0
          // parallelism-max = 16
        }
      }
    }

    # Task queue
    queue {
         name = "xld-tasks-queue"
      backoff {
           attempts = 25
           timeout = 5000
      }
      in-process {
        # In-process task queue, used only if xl.task.in-process-worker=true
        // maxDiskUsage = 100 # percent
        // shutdownTimeout = 60000 # milliseconds
      }
      external {
        # External task queue, used only if xl.task.in-process-worker=false
           jms-driver-classname = "com.rabbitmq.jms.admin.RMQConnectionFactory"
           jms-url = "amqp://172.16.16.136:5672"
           jms-username = "admin"
           jms-password = "admin"
      }
    }
  }

  satellite {
    // enabled = no
    timeout {
      // info = "10 seconds"
      // ping = "5 seconds"
      // upload.idle = "30 seconds"
      // streaming = "10 seconds"
    }
    streaming {
      # Maximum amount of concurrent uploads per task
      // max-uploads = 10
    }

  }

  # Hot-standby settings.
  # config settings inside cluster {...} may differ across masters and workers
  cluster {

    # mode: "default", "hot-standby"
    # "default" means no clustering, and the rest of this config will not be taken into account
    # for multi-master active/active setups, specify "default".
    // mode = "default"

    # the name of the akka hot-standby cluster
    // name = "xld-cluster"

    membership {
      # heartbeat and ttl are optional settings, defaulting to 10s and 60s respectively. ttl should be > heartbeat.
      // heartbeat = 10 seconds
      // ttl = 60 seconds

      # the jdbc section tells XL Deploy where to find cluster bootstrapping information. Required when xl.cluster.mode="hot-standby"
      jdbc {
        // url = "jdbc:mysql://db/example?useSSL=false"
        // username = "some_db_user"
        // password = "t0pS3cr3t"
      }
    }

    # These are optional. See the docs for their meaning.
    akka {
      // actor.provider = "akka.cluster.ClusterActorRefProvider"
      cluster {
        # Handling network partitions (see the docs)
        // downing-provider-class = "akka.cluster.AutoDowning"
        // auto-down-unreachable-after = 15s
        // custom-downing.down-removal-margin = 10s
        // custom-downing.stable-after = 10s
      }
    }
  }

  # Where to cache download results for exported DARs and reports
  downloads {
    # absolute folder name, or relative to installation folder
    // export-root = export
  }

  # CIs export and import directories for the CLI `repository.exportCis()` and `repository.importCis()` calls
  # see https://docs.xebialabs.com/xl-deploy/how-to/export-items-from-or-import-items-into-the-repository.html
  export-cis {
    // export-dir = export
    // import-work-dir = work
  }

  # Artifact resolver configuration
  artifact {
    resolver {
      # HTTP Artifact resolver configuration
      http {
        # switch to ignore missing artifacts - XLD will serve and empty artifact if true is used
        // ignoreMissingArtifact = false
      }
      #Maven Artifact resolver
      maven {
        # switch to ignore missing artifacts - XLD will serve and empty artifact if true is used
        // ignoreMissingArtifact = false
        # artifact resolver default working directory
        // work-dir = "work"

        # list of repositories, each repository contains the configuration related to it. This configuration includes:
        # * Basic information: id and url
        # * authentication configuration with the same elements as servers have in settings.xml: username, password, privateKey and passphrase.
        # * proxy configuration to use when connecting to this repository.
        # * Repository policies for releases and snapshots
        // repositories: [
        //   {
        //     id: central
        //     url: "https://repo.maven.apache.org/maven2/"
        //     releases: {
        //       enabled: true
        //       checksumPolicy: fail
        //     }
        //     proxy: {
        //       host: "proxy.host.net"
        //       port: 80
        //       username: proxyuser
        //       password: proxypass
        //     }
        //     snapshots: {
        //       enabled: false
        //     }
        //   }
        // ]
      }
    }
  }

  # Scheduler Akka configuration
  scheduler {
    system {
      akka {
        // daemonic = true
        # this setting may differ across masters and workers
        // loggers = ${akka.loggers}
        # this setting may differ across masters and workers
        // loglevel = ${akka.loglevel}
        scheduler {
          // tick-duration = "1000ms"
        }
      }
    }
  }

  # interval for planner configuration file checkup
  file-watch {
    // interval = 0 seconds
  }
  # planner configuration
  planner {
    registries {
      // timeout = 1 minute
      # Akka dispacher configuration
      Dispatcher {
        // type = Dispatcher
        // executor = "thread-pool-executor"
        // throughput = 100
        thread-pool-executor {
          // core-pool-size-min = 10
          // core-pool-size-factor = 2.0
          // core-pool-size-max = 10
        }
      }
    }
    # Planner Akka configuration
    system {
      akka {
        # this setting may differ across masters and workers
        // loggers = ${akka.loggers}
        # this setting may differ across masters and workers
        // loglevel = ${akka.loglevel}
      }
    }
  }

  algorithms {
    # algorithm for checksum computation, can be SHA-256 or SHA-1 (legacy)
    # SHA-256 is a default value starting from 9.5.0 release
    # SHA-256 should always be used for any new installation for security reasons
    # SHA-256 cannot be used for installations with existing file/folder/archive or any other artifacts with computed checksum from previous releases, use SHA-1 in this case
    # migration procedure will determine if SHA-256 can be used and will set SHA-1 otherwise
    checksum = SHA-256
  }

  migration {
    ci {
      placeholder {
        # The number of CIs fetched in a single transaction.
        # Higher values will make migration faster, but the target database should be able to handle large transactions.
        // batchSize = 100
        # Where to store the state of the migration.
        # Will be used to restart the migration from that point.
        // stateFile = "ci-placeholders-migration.dat"
        # File path to export contents of CIs that failed to migrate successfully.
        // errorLogLocation = "ci-placeholders-migration-errors"
      }
    }
  }
}

akka {
  # this setting may differ across masters and workers
  // loggers = ["akka.event.slf4j.Slf4jLogger"]
  # this setting may differ across masters and workers
  // loglevel = INFO
}
